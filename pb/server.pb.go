// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: pb/server.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GameMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          *string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	IsStarted     *bool                  `protobuf:"varint,2,opt,name=is_started,json=isStarted" json:"is_started,omitempty"`
	IsGameOver    *bool                  `protobuf:"varint,3,opt,name=is_game_over,json=isGameOver" json:"is_game_over,omitempty"`
	LinesClear    *int32                 `protobuf:"varint,4,opt,name=lines_clear,json=linesClear" json:"lines_clear,omitempty"`
	Stack         *Stack                 `protobuf:"bytes,5,opt,name=stack" json:"stack,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameMessage) Reset() {
	*x = GameMessage{}
	mi := &file_pb_server_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameMessage) ProtoMessage() {}

func (x *GameMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pb_server_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameMessage.ProtoReflect.Descriptor instead.
func (*GameMessage) Descriptor() ([]byte, []int) {
	return file_pb_server_proto_rawDescGZIP(), []int{0}
}

func (x *GameMessage) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GameMessage) GetIsStarted() bool {
	if x != nil && x.IsStarted != nil {
		return *x.IsStarted
	}
	return false
}

func (x *GameMessage) GetIsGameOver() bool {
	if x != nil && x.IsGameOver != nil {
		return *x.IsGameOver
	}
	return false
}

func (x *GameMessage) GetLinesClear() int32 {
	if x != nil && x.LinesClear != nil {
		return *x.LinesClear
	}
	return 0
}

func (x *GameMessage) GetStack() *Stack {
	if x != nil {
		return x.Stack
	}
	return nil
}

type Stack struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rows          []*Row                 `protobuf:"bytes,1,rep,name=rows" json:"rows,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Stack) Reset() {
	*x = Stack{}
	mi := &file_pb_server_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Stack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stack) ProtoMessage() {}

func (x *Stack) ProtoReflect() protoreflect.Message {
	mi := &file_pb_server_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stack.ProtoReflect.Descriptor instead.
func (*Stack) Descriptor() ([]byte, []int) {
	return file_pb_server_proto_rawDescGZIP(), []int{1}
}

func (x *Stack) GetRows() []*Row {
	if x != nil {
		return x.Rows
	}
	return nil
}

type Row struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cells         []string               `protobuf:"bytes,1,rep,name=cells" json:"cells,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Row) Reset() {
	*x = Row{}
	mi := &file_pb_server_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Row) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Row) ProtoMessage() {}

func (x *Row) ProtoReflect() protoreflect.Message {
	mi := &file_pb_server_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Row.ProtoReflect.Descriptor instead.
func (*Row) Descriptor() ([]byte, []int) {
	return file_pb_server_proto_rawDescGZIP(), []int{2}
}

func (x *Row) GetCells() []string {
	if x != nil {
		return x.Cells
	}
	return nil
}

var File_pb_server_proto protoreflect.FileDescriptor

const file_pb_server_proto_rawDesc = "" +
	"\n" +
	"\x0fpb/server.proto\"\xa1\x01\n" +
	"\vGameMessage\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"is_started\x18\x02 \x01(\bR\tisStarted\x12 \n" +
	"\fis_game_over\x18\x03 \x01(\bR\n" +
	"isGameOver\x12\x1f\n" +
	"\vlines_clear\x18\x04 \x01(\x05R\n" +
	"linesClear\x12\x1c\n" +
	"\x05stack\x18\x05 \x01(\v2\x06.StackR\x05stack\"!\n" +
	"\x05Stack\x12\x18\n" +
	"\x04rows\x18\x01 \x03(\v2\x04.RowR\x04rows\"\x1b\n" +
	"\x03Row\x12\x14\n" +
	"\x05cells\x18\x01 \x03(\tR\x05cells2?\n" +
	"\rTetrisService\x12.\n" +
	"\n" +
	"PlayTetris\x12\f.GameMessage\x1a\f.GameMessage\"\x00(\x010\x01B\"Z github.com/Alvaroalonsobabbel/pbb\beditionsp\xe8\a"

var (
	file_pb_server_proto_rawDescOnce sync.Once
	file_pb_server_proto_rawDescData []byte
)

func file_pb_server_proto_rawDescGZIP() []byte {
	file_pb_server_proto_rawDescOnce.Do(func() {
		file_pb_server_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pb_server_proto_rawDesc), len(file_pb_server_proto_rawDesc)))
	})
	return file_pb_server_proto_rawDescData
}

var file_pb_server_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_pb_server_proto_goTypes = []any{
	(*GameMessage)(nil), // 0: GameMessage
	(*Stack)(nil),       // 1: Stack
	(*Row)(nil),         // 2: Row
}
var file_pb_server_proto_depIdxs = []int32{
	1, // 0: GameMessage.stack:type_name -> Stack
	2, // 1: Stack.rows:type_name -> Row
	0, // 2: TetrisService.PlayTetris:input_type -> GameMessage
	0, // 3: TetrisService.PlayTetris:output_type -> GameMessage
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_pb_server_proto_init() }
func file_pb_server_proto_init() {
	if File_pb_server_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pb_server_proto_rawDesc), len(file_pb_server_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pb_server_proto_goTypes,
		DependencyIndexes: file_pb_server_proto_depIdxs,
		MessageInfos:      file_pb_server_proto_msgTypes,
	}.Build()
	File_pb_server_proto = out.File
	file_pb_server_proto_goTypes = nil
	file_pb_server_proto_depIdxs = nil
}
